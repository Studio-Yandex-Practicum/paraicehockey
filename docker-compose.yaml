version: '3.8'
services:
  bot:
    build: .
    container_name: bot
    restart: always
    ports:
      - "8080:8080"
    volumes:
      - static_value:/app/static_for_bot/
      - bot_data:/app/metrics
    depends_on:
      - db
    env_file:
      - .env

  db:
    image: postgres:10.13
    ports:
      - "5433:5433"
    env_file:
      - .env
    volumes:
      - ./data:/var/lib/postgresql/data

  nginx:
    image: nginx:1.22-alpine
    container_name: nginx
    ports:
      - "90:90"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - static_value:/var/html/static/
    depends_on:
      - bot

  # the Prometheus server
  prometheus:
    container_name: prometheus
    restart: always
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./tg-bot-config/prometheus/config.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
      - bot_data:/app/metrics:ro
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--query.lookback-delta=1h"
      - "--storage.tsdb.path=/prometheus/data"
      - "--storage.tsdb.min-block-duration=2h"
      - "--storage.tsdb.max-block-duration=336h"
      - "--web.enable-admin-api"
      - "--web.enable-lifecycle"
    depends_on:
      - db
      - bot

  # Grafana for visualization
  grafana:
    container_name: grafana
    image: grafana/grafana
    volumes:
      - ./tg-bot-config/grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./tg-bot-config/grafana/provisioning/datasources/default.yaml:/etc/grafana/provisioning/datasources/default.yaml
      - ./tg-bot-config/grafana/provisioning/dashboards/default.yaml:/etc/grafana/provisioning/dashboards/default.yaml
      - ./tg-bot-config/grafana/dashboards:/var/lib/grafana/dashboards
    ports:
      - "3000:3000"
    depends_on:
      - nginx

volumes:
  static_value:
  prometheus_data:
  bot_data:
  data:
